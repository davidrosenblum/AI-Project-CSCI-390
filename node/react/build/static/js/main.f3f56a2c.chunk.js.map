{"version":3,"sources":["ajax.js","components/ScrapeInput.jsx","components/TrainInput.jsx","components/PredictInput.jsx","components/CSVInput.jsx","components/App.jsx","index.js"],"names":["ajax","options","Error","Promise","resolve","reject","method","url","window","location","origin","headers","data","xhr","XMLHttpRequest","h","onload","onerror","err","open","setRequestHeader","out","JSON","stringify","send","ScrapeInput","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","urlsInput","state","pending","message","inherits","createClass","key","value","evt","_this2","preventDefault","urls","split","includes","Access-Control-Allow-Origin","config","concat","setState","then","response","catch","_this3","react_default","a","createElement","reactstrap_es","onSubmit","bind","className","innerRef","input","type","placeholder","required","disabled","onClick","onClear","React","Component","TrainInput","topicInput","topic","PredictInput","CSVInput","encodeURIComponent","status","csvBlob","Blob","document","objUrl","URL","createObjectURL","setAttribute","click","revokeObjectURL","App","apply","arguments","color","lg","ScrapeInput_ScrapeInput","CSVInput_CSVInput","TrainInput_TrainInput","PredictInput_PredictInput","ReactDOM","render","App_App","querySelector"],"mappings":"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","file":"static/js/main.f3f56a2c.chunk.js","sourcesContent":["export const ajax = function(options){\r\n    if(!options || typeof options !== \"object\")\r\n        throw new Error(\"Ajax options missing.\");\r\n\r\n    return new Promise((resolve, reject) => {\r\n        let method = (typeof options.method === \"string\") ? options.method : \"GET\",\r\n            url = (typeof options.url === \"string\") ? options.url : window.location.origin,\r\n            headers = (typeof options.headers === \"object\" && options.headers) ? options.headers : {},\r\n            data = options.data;\r\n\r\n        let xhr = new XMLHttpRequest();\r\n\r\n        xhr.onload = () => resolve(xhr);\r\n        xhr.onerror = err => reject(err);\r\n\r\n        xhr.open(method, url, true);\r\n\r\n        for(let h in headers){\r\n            xhr.setRequestHeader(h, headers[h]);\r\n        }\r\n\r\n        if(data){\r\n            if(typeof data !== \"string\"){\r\n                let out = null;\r\n\r\n                try{\r\n                    out = JSON.stringify(data);\r\n                }\r\n                catch(err){\r\n                    reject(err);\r\n                }\r\n\r\n                xhr.send(out);\r\n            }\r\n            else xhr.send(data);\r\n        }\r\n        else xhr.send();\r\n    });\r\n};","import React from \"react\";\r\nimport { Form, FormGroup, Button, Input } from \"reactstrap\";\r\nimport { ajax } from \"../ajax\";\r\n\r\nexport class ScrapeInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.urlsInput = null;\r\n\r\n        this.state = {\r\n            pending: false,\r\n            message: null\r\n        };\r\n    }\r\n\r\n    onSubmit(evt){\r\n        evt.preventDefault();\r\n\r\n        let urls = this.urlsInput.value.split(\",\");\r\n\r\n        let origin = window.location.origin.includes(\"localhost\") ? \"http://localhost:8080\" : window.location.origin;\r\n\r\n        let headers = {\r\n            \"Access-Control-Allow-Origin\": window.location.origin\r\n        };\r\n\r\n        let config = {\r\n            method:     \"POST\",\r\n            url:        `${origin}/api/page/scrape`,\r\n            data:       {urls},\r\n            headers\r\n        };\r\n\r\n        this.setState({pending: true, message: \"Requesting scrape...\"});\r\n\r\n        ajax(config)\r\n            .then(xhr => {\r\n                this.setState({pending: false, message: xhr.response});\r\n            })\r\n            .catch(err => {\r\n                this.setState({pending: false, message: \"Request Error\"});\r\n            });\r\n    }\r\n\r\n    onClear(){\r\n        this.urlsInput.value = \"\";\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.onSubmit.bind(this)}>\r\n                    <h3 className=\"text-center\">Scrape Pages</h3>\r\n                    <FormGroup>\r\n                        <Input\r\n                            innerRef={input => this.urlsInput = input}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter URL(s) separated by commas here\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"text-center\">\r\n                        <Button disabled={this.state.pending}>Submit</Button>&nbsp;\r\n                        <Button onClick={this.onClear.bind(this)} disabled={this.state.pending} type=\"button\">\r\n                            Clear\r\n                        </Button>\r\n                    </FormGroup>\r\n                </Form>\r\n                <div className=\"text-center\">\r\n                    {this.state.message}\r\n                </div>\r\n                <div>\r\n                    URL(s) placed here will be scrapped and stored in the database for quick future use.\r\n                    This data is not associated with any model, but can be used in model creation later.\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Form, FormGroup, Button, Input } from \"reactstrap\";\r\nimport { ajax } from \"../ajax\";\r\n\r\nexport class TrainInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.urlsInput = null;\r\n        this.topicInput = null;\r\n\r\n        this.state = {\r\n            message: null,\r\n            pending: false\r\n        };\r\n    }\r\n\r\n    onSubmit(evt){\r\n        evt.preventDefault();\r\n\r\n        let urls = this.urlsInput.value.split(\",\");\r\n        let topic = this.topicInput.value;\r\n\r\n        let origin = window.location.origin.includes(\"localhost\") ? \"http://localhost:8080\" : window.location.origin;\r\n\r\n        let headers = {\r\n            \"Access-Control-Allow-Origin\": window.location.origin,\r\n        };\r\n\r\n        let config = {\r\n            method:     \"POST\",\r\n            url:        `${origin}/api/train/${topic}`,\r\n            data:       {urls, topic},\r\n            headers\r\n        };\r\n\r\n        ajax(config)\r\n            .then(xhr => {\r\n                this.setState({pending: false, message: xhr.response});\r\n            })\r\n            .catch(err => {\r\n                this.setState({pending: false, message: \"Error\"});\r\n            });\r\n    }\r\n\r\n    onClear(){\r\n        this.urlsInput.value = \"\";\r\n        this.topicInput.value = \"\";\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.onSubmit.bind(this)}>\r\n                    <h3 className=\"text-center\">Training Data</h3>\r\n                    <FormGroup>\r\n                        <Input\r\n                            innerRef={input => this.urlsInput = input}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter training URL(s) here, comma separated\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                    <Input\r\n                            innerRef={input => this.topicInput = input}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter training topic\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"text-center\">\r\n                        <Button disabled={this.state.pending}>Submit</Button>&nbsp;\r\n                        <Button onClick={this.onClear.bind(this)} disabled={this.state.pending} type=\"button\">\r\n                            Clear\r\n                        </Button>\r\n                    </FormGroup>\r\n                </Form>\r\n                <div className=\"text-center\">\r\n                    {this.state.message}\r\n                </div>\r\n                <div>\r\n                    URL(s) placed here will be loaded and used to create a training model.\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Form, FormGroup, Button, Input } from \"reactstrap\";\r\nimport { ajax } from \"../ajax\";\r\n\r\nexport class PredictInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.urlsInput = null;\r\n        this.topicInput = null;\r\n\r\n        this.state = {\r\n            message: null,\r\n            pending: false\r\n        };\r\n    }\r\n\r\n    onSubmit(evt){\r\n        evt.preventDefault();\r\n\r\n        let urls = this.urlsInput.value.split(\",\");\r\n        let topic = this.topicInput.value;\r\n\r\n        let origin = window.location.origin.includes(\"localhost\") ? \"http://localhost:8080\" : window.location.origin;\r\n\r\n        let headers = {\r\n            \"Access-Control-Allow-Origin\": window.location.origin\r\n        };\r\n\r\n        let config = {\r\n            method:     \"POST\",\r\n            url:        `${origin}/api/predict/${topic}`,\r\n            data:       {urls, topic},\r\n            headers\r\n        };\r\n\r\n        ajax(config)\r\n            .then(xhr => {\r\n                this.setState({pending: false, message: xhr.response});\r\n            })\r\n            .catch(err => {\r\n                this.setState({pending: false, message: \"Error\"});\r\n            });\r\n    }\r\n\r\n    onClear(){\r\n        this.urlsInput.value = \"\";\r\n        this.topicInput.value = \"\";\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <h3 className=\"text-center\">Model Prediction</h3>\r\n                    <FormGroup>\r\n                        <Input\r\n                            innerRef={input => this.urlsInput = input}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter URL(s) to test, comma separated\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input\r\n                            innerRef={input => this.topicInput = input}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter topic to test\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"text-center\">\r\n                        <Button disabled={this.state.pending}>Submit</Button>&nbsp;\r\n                        <Button onClick={this.onClear.bind(this)} disabled={this.state.pending} type=\"button\">\r\n                            Clear\r\n                        </Button>\r\n                    </FormGroup>\r\n                </Form>\r\n                <div className=\"text-center\">\r\n                    {this.state.message}\r\n                </div>\r\n                <div>\r\n                    URL(s) placed here will be loaded and checked against the trained model.\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Form, FormGroup, Button, Input } from \"reactstrap\";\r\nimport { ajax } from \"../ajax\";\r\n\r\nexport class CSVInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.urlsInput = null;\r\n\r\n        this.state = {\r\n            message: null,\r\n            pending: false\r\n        };\r\n    }\r\n\r\n    onSubmit(evt){\r\n        evt.preventDefault();\r\n\r\n        let urls = encodeURIComponent(this.urlsInput.value);\r\n\r\n        let origin = window.location.origin.includes(\"localhost\") ? \"http://localhost:8080\" : window.location.origin;\r\n\r\n        let headers = {\r\n            \"Access-Control-Allow-Origin\": window.location.origin\r\n        };\r\n\r\n        let config = {\r\n            method:     \"GET\",\r\n            url:        `${origin}/api/page/csv?urls=${urls}`,\r\n            headers\r\n        };\r\n\r\n        this.setState({pending: true, message: \"Requesting CSV file...\"});\r\n\r\n        ajax(config)\r\n            .then(xhr => {\r\n                if(xhr.status === 200){\r\n                    this.setState({pending: false, message: \"\"});\r\n\r\n                    let csvBlob = new Blob([xhr.response], {type: \"octet/stream\"});\r\n                    let a = document.createElement(\"a\");\r\n                    let objUrl = window.URL.createObjectURL(csvBlob);\r\n\r\n                    a.setAttribute(\"download\", \"words.csv\");\r\n                    a.setAttribute(\"href\", objUrl);\r\n                    a.click();\r\n\r\n                    window.URL.revokeObjectURL(objUrl);\r\n                }\r\n                else{\r\n                    this.setState({pending: false, message: xhr.response});\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                this.setState({pending: false, message: \"Request error.\"});\r\n            });\r\n    }\r\n\r\n    onClear(){\r\n        this.urlsInput.value = \"\";\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.onSubmit.bind(this)}>\r\n                    <h3 className=\"text-center\">Download CSV</h3>\r\n                    <FormGroup>\r\n                        <Input\r\n                            innerRef={input => this.urlsInput = input}\r\n                            placeholder=\"Enter URL(s) for their combined CSV data\"\r\n                            type=\"text\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"text-center\">\r\n                        <Button disabled={this.state.pending}>\r\n                            Submit\r\n                        </Button>&nbsp;\r\n                        <Button onClick={this.onClear.bind(this)} disabled={this.state.pending} type=\"button\">\r\n                            Clear\r\n                        </Button>\r\n                    </FormGroup>\r\n                </Form>\r\n                <div className=\"text-center\">\r\n                    {this.state.message}\r\n                </div>\r\n                <div>\r\n                    URL(s) placed here will be searched for in the database.\r\n                    A CSV file will be downloaded with all the data about the URL(s).\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import \"../lib/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { Container, Card, CardBody, Row, Col} from \"reactstrap\";\r\nimport { ScrapeInput } from \"./ScrapeInput\";\r\nimport { TrainInput } from \"./TrainInput\";\r\nimport { PredictInput } from \"./PredictInput\";\r\nimport { CSVInput } from \"./CSVInput\";\r\n\r\nexport class App extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <Container>\r\n                    <Card color=\"light\">\r\n                        <CardBody>\r\n                            <Row>\r\n                                <Col lg={6}>\r\n                                    <ScrapeInput/>\r\n                                </Col>\r\n                                <Col lg={6}>\r\n                                    <CSVInput/>\r\n                                </Col>\r\n                            </Row>\r\n                            <br/>\r\n                            <Row>\r\n                                <Col lg={6}>\r\n                                    <TrainInput/>\r\n                                </Col>\r\n                                <Col lg={6}>\r\n                                    <PredictInput/>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/App\";\r\n\r\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}