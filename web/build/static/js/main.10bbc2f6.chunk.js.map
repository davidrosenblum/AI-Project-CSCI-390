{"version":3,"sources":["ajax.js","dispatchers/ModalDispatcher.js","components/ScrapeInput.jsx","components/TrainInput.jsx","components/PredictInput.jsx","components/CSVInput.jsx","components/App.jsx","index.js"],"names":["ajax","options","Error","Promise","resolve","reject","method","url","window","location","origin","headers","data","xhr","XMLHttpRequest","h","onload","onerror","err","open","setRequestHeader","out","JSON","stringify","send","ModalDispatcher","EventEmitter","ScrapeInput","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","urlsInput","state","pending","message","inherits","createClass","key","value","evt","_this2","preventDefault","urls","split","includes","Access-Control-Allow-Origin","config","concat","setState","then","emit","header","body","response","catch","_this3","react_default","a","createElement","reactstrap_es","onSubmit","bind","className","innerRef","input","type","placeholder","required","disabled","onClick","onClear","React","Component","TrainInput","topicInput","topic","PredictInput","CSVInput","filenameInput","encodeURIComponent","status","filename","Date","now","endsWith","csvBlob","Blob","document","objUrl","URL","createObjectURL","setAttribute","click","revokeObjectURL","App","showNav","showDropdown","dropdownOption","showModal","modalHeader","modalBody","on","toggleModal","prev","lg","ScrapeInput_ScrapeInput","CSVInput_CSVInput","TrainInput_TrainInput","PredictInput_PredictInput","renderAll","color","expand","light","toggleNav","isOpen","navbar","toggle","toggleDropdown","caret","renderInputs","ReactDOM","render","App_App","querySelector"],"mappings":"2RAAaA,EAAO,SAASC,GACzB,IAAIA,GAA8B,kBAAZA,EAClB,MAAM,IAAIC,MAAM,yBAEpB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACzB,IAAIC,EAAoC,kBAAnBL,EAAQK,OAAuBL,EAAQK,OAAS,MACjEC,EAA8B,kBAAhBN,EAAQM,IAAoBN,EAAQM,IAAMC,OAAOC,SAASC,OACxEC,EAAsC,kBAApBV,EAAQU,SAAwBV,EAAQU,QAAWV,EAAQU,QAAU,GACvFC,EAAOX,EAAQW,KAEfC,EAAM,IAAIC,eAOd,IAAI,IAAIC,KALRF,EAAIG,OAAS,kBAAMZ,EAAQS,IAC3BA,EAAII,QAAU,SAAAC,GAAG,OAAIb,EAAOa,IAE5BL,EAAIM,KAAKb,EAAQC,GAAK,GAETI,EACTE,EAAIO,iBAAiBL,EAAGJ,EAAQI,IAGpC,GAAGH,EACC,GAAmB,kBAATA,EAAkB,CACxB,IAAIS,EAAM,KAEV,IACIA,EAAMC,KAAKC,UAAUX,GAEzB,MAAMM,GACFb,EAAOa,GAGXL,EAAIW,KAAKH,QAERR,EAAIW,KAAKZ,QAEbC,EAAIW,UClCFC,EAAA,IAAIC,ICGNC,EAAb,SAAAC,GACI,SAAAD,EAAYE,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACdG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAEDQ,UAAY,KAEjBP,EAAKQ,MAAQ,CACTC,SAAS,EACTC,QAAS,MAPCV,EADtB,OAAAC,OAAAU,EAAA,EAAAV,CAAAJ,EAAAC,GAAAG,OAAAW,EAAA,EAAAX,CAAAJ,EAAA,EAAAgB,IAAA,WAAAC,MAAA,SAYaC,GAAI,IAAAC,EAAAb,KACTY,EAAIE,iBAEJ,IAAIC,EAAOf,KAAKI,UAAUO,MAAMK,MAAM,KAElCvC,EAASF,OAAOC,SAASC,OAAOwC,SAAS,aAAe,wBAA0B1C,OAAOC,SAASC,OAElGC,EAAU,CACVwC,8BAA+B3C,OAAOC,SAASC,QAG/C0C,EAAS,CACT9C,OAAY,OACZC,IAAG,GAAA8C,OAAY3C,EAAZ,oBACHE,KAAY,CAACoC,QACbrC,WAGJsB,KAAKqB,SAAS,CAACf,SAAS,EAAMC,QAAS,yBAEvCxC,EAAKoD,GACAG,KAAK,SAAA1C,GAAG,OAAIY,EAAgB+B,KAAK,aAAc,CAACC,OAAQ,iBAAkBC,KAAM7C,EAAI8C,aACpFC,MAAM,SAAA1C,GAAG,OAAIO,EAAgB+B,KAAK,aAAc,CAACC,OAAQ,iBAAkBC,KAAM,4BACjFH,KAAK,kBAAMT,EAAKQ,SAAS,CAACf,SAAS,EAAOC,QAAS,SAnChE,CAAAG,IAAA,UAAAC,MAAA,WAuCQX,KAAKI,UAAUO,MAAQ,GAEvBX,KAAKqB,SAAS,CAACd,QAAS,SAzChC,CAAAG,IAAA,SAAAC,MAAA,WA4CY,IAAAiB,EAAA5B,KACJ,OACI6B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,SAAUjC,KAAKiC,SAASC,KAAKlC,OAC/B6B,EAAAC,EAAAC,cAAA,MAAII,UAAU,eAAd,gBACAN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,aACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACII,SAAU,SAAAC,GAAK,OAAIT,EAAKxB,UAAYiC,GACpCC,KAAK,OACLC,YAAY,wCACZC,UAAQ,KAGhBX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWG,UAAU,eACjBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQS,SAAUzC,KAAKK,MAAMC,SAA7B,UADJ,OAEIuB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQU,QAAS1C,KAAK2C,QAAQT,KAAKlC,MAAOyC,SAAUzC,KAAKK,MAAMC,QAASgC,KAAK,UAA7E,WAKRT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACVnC,KAAKK,MAAME,SAEhBsB,EAAAC,EAAAC,cAAA,6LApEhBrC,EAAA,CAAiCkD,IAAMC,WCA1BC,EAAb,SAAAnD,GACI,SAAAmD,EAAYlD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IACdjD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,KAAMJ,KAEDQ,UAAY,KACjBP,EAAKkD,WAAa,KAElBlD,EAAKQ,MAAQ,CACTE,QAAS,KACTD,SAAS,GARCT,EADtB,OAAAC,OAAAU,EAAA,EAAAV,CAAAgD,EAAAnD,GAAAG,OAAAW,EAAA,EAAAX,CAAAgD,EAAA,EAAApC,IAAA,WAAAC,MAAA,SAaaC,GAAI,IAAAC,EAAAb,KACTY,EAAIE,iBAEJ,IAAIC,EAAOf,KAAKI,UAAUO,MAAMK,MAAM,KAClCgC,EAAQhD,KAAK+C,WAAWpC,MAExBlC,EAASF,OAAOC,SAASC,OAAOwC,SAAS,aAAe,wBAA0B1C,OAAOC,SAASC,OAElGC,EAAU,CACVwC,8BAA+B3C,OAAOC,SAASC,QAG/C0C,EAAS,CACT9C,OAAY,OACZC,IAAG,GAAA8C,OAAY3C,EAAZ,cACHE,KAAY,CAACoC,OAAMiC,SACnBtE,WAGJX,EAAKoD,GACAG,KAAK,SAAA1C,GAAG,OAAIY,EAAgB+B,KAAK,aAAc,CAACC,OAAQ,mBAAoBC,KAAM7C,EAAI8C,aACtFC,MAAM,SAAA1C,GAAG,OAAIO,EAAgB+B,KAAK,aAAc,CAACC,OAAQ,mBAAoBC,KAAM,4BACnFH,KAAK,kBAAMT,EAAKQ,SAAS,CAACf,SAAS,EAAOC,QAAS,SAnChE,CAAAG,IAAA,UAAAC,MAAA,WAuCQX,KAAKI,UAAUO,MAAQ,GACvBX,KAAK+C,WAAWpC,MAAQ,GAExBX,KAAKqB,SAAS,CAACd,QAAS,SA1ChC,CAAAG,IAAA,SAAAC,MAAA,WA6CY,IAAAiB,EAAA5B,KACJ,OACI6B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,SAAUjC,KAAKiC,SAASC,KAAKlC,OAC/B6B,EAAAC,EAAAC,cAAA,MAAII,UAAU,eAAd,iBACAN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,aACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACII,SAAU,SAAAC,GAAK,OAAIT,EAAKxB,UAAYiC,GACpCC,KAAK,OACLC,YAAY,8CACZC,UAAQ,KAGhBX,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,cACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACII,SAAU,SAAAC,GAAK,OAAIT,EAAKmB,WAAaV,GACrCC,KAAK,OACLC,YAAY,uBACZC,UAAQ,KAGhBX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWG,UAAU,eACjBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQS,SAAUzC,KAAKK,MAAMC,SAA7B,UADJ,OAEIuB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQU,QAAS1C,KAAK2C,QAAQT,KAAKlC,MAAOyC,SAAUzC,KAAKK,MAAMC,QAASgC,KAAK,UAA7E,WAKRT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACVnC,KAAKK,MAAME,SAEhBsB,EAAAC,EAAAC,cAAA,0FA9EhBe,EAAA,CAAgCF,IAAMC,WCAzBI,EAAb,SAAAtD,GACI,SAAAsD,EAAYrD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiD,IACdpD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmD,GAAA9C,KAAAH,KAAMJ,KAEDQ,UAAY,KACjBP,EAAKkD,WAAa,KAElBlD,EAAKQ,MAAQ,CACTE,QAAS,KACTD,SAAS,GARCT,EADtB,OAAAC,OAAAU,EAAA,EAAAV,CAAAmD,EAAAtD,GAAAG,OAAAW,EAAA,EAAAX,CAAAmD,EAAA,EAAAvC,IAAA,WAAAC,MAAA,SAaaC,GAAI,IAAAC,EAAAb,KACTY,EAAIE,iBAEJ,IAAIC,EAAOf,KAAKI,UAAUO,MAAMK,MAAM,KAClCgC,EAAQhD,KAAK+C,WAAWpC,MAExBlC,EAASF,OAAOC,SAASC,OAAOwC,SAAS,aAAe,wBAA0B1C,OAAOC,SAASC,OAElGC,EAAU,CACVwC,8BAA+B3C,OAAOC,SAASC,QAG/C0C,EAAS,CACT9C,OAAY,OACZC,IAAG,GAAA8C,OAAY3C,EAAZ,gBACHE,KAAY,CAACoC,OAAMiC,SACnBtE,WAGJX,EAAKoD,GACAG,KAAK,SAAA1C,GAAG,OAAIY,EAAgB+B,KAAK,aAAc,CAACC,OAAQ,qBAAsBC,KAAM7C,EAAI8C,aACxFC,MAAM,SAAA1C,GAAG,OAAIO,EAAgB+B,KAAK,aAAc,CAACC,OAAQ,qBAAsBC,KAAM,4BACrFH,KAAK,kBAAMT,EAAKQ,SAAS,CAACf,SAAS,EAAOC,QAAS,SAnChE,CAAAG,IAAA,UAAAC,MAAA,WAuCQX,KAAKI,UAAUO,MAAQ,GACvBX,KAAK+C,WAAWpC,MAAQ,GAExBX,KAAKqB,SAAS,CAACd,QAAS,SA1ChC,CAAAG,IAAA,SAAAC,MAAA,WA6CY,IAAAiB,EAAA5B,KACJ,OACI6B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,SAAUjC,KAAKiC,SAASC,KAAKlC,OAC/B6B,EAAAC,EAAAC,cAAA,MAAII,UAAU,eAAd,oBACAN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,aACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACII,SAAU,SAAAC,GAAK,OAAIT,EAAKxB,UAAYiC,GACpCC,KAAK,OACLC,YAAY,wCACZC,UAAQ,KAGhBX,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,cACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACII,SAAU,SAAAC,GAAK,OAAIT,EAAKmB,WAAaV,GACrCC,KAAK,OACLC,YAAY,sBACZC,UAAQ,KAGhBX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWG,UAAU,eACjBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQS,SAAUzC,KAAKK,MAAMC,SAA7B,UADJ,OAEIuB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQU,QAAS1C,KAAK2C,QAAQT,KAAKlC,MAAOyC,SAAUzC,KAAKK,MAAMC,QAASgC,KAAK,UAA7E,WAKRT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACVnC,KAAKK,MAAME,SAEhBsB,EAAAC,EAAAC,cAAA,4FA9EhBkB,EAAA,CAAkCL,IAAMC,WCA3BK,EAAb,SAAAvD,GACI,SAAAuD,EAAYtD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACdrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,KAAMJ,KAEDQ,UAAY,KACjBP,EAAKsD,cAAgB,KAErBtD,EAAKQ,MAAQ,CACTE,QAAS,KACTD,SAAS,GARCT,EADtB,OAAAC,OAAAU,EAAA,EAAAV,CAAAoD,EAAAvD,GAAAG,OAAAW,EAAA,EAAAX,CAAAoD,EAAA,EAAAxC,IAAA,WAAAC,MAAA,SAaaC,GAAI,IAAAC,EAAAb,KACTY,EAAIE,iBAEJ,IAAIC,EAAOqC,mBAAmBpD,KAAKI,UAAUO,OAEzClC,EAASF,OAAOC,SAASC,OAAOwC,SAAS,aAAe,wBAA0B1C,OAAOC,SAASC,OAElGC,EAAU,CACVwC,8BAA+B3C,OAAOC,SAASC,QAG/C0C,EAAS,CACT9C,OAAY,MACZC,IAAG,GAAA8C,OAAY3C,EAAZ,uBAAA2C,OAAwCL,GAC3CrC,WAGJsB,KAAKqB,SAAS,CAACf,SAAS,EAAMC,QAAS,2BAEvCxC,EAAKoD,GACAG,KAAK,SAAA1C,GACF,GAAkB,MAAfA,EAAIyE,OAAe,CAElB,IAAIC,EAAWzC,EAAKsC,cAAcxC,MAAQE,EAAKsC,cAAcxC,MAA9C,SAAAS,OAA+DmC,KAAKC,MAApE,QAGXF,EAASG,SAAS,UAClBH,GAAY,QAIhB,IAAII,EAAU,IAAIC,KAAK,CAAC/E,EAAI8C,UAAW,CAACY,KAAM,iBAC1CR,EAAI8B,SAAS7B,cAAc,KAC3B8B,EAAStF,OAAOuF,IAAIC,gBAAgBL,GAGxC5B,EAAEkC,aAAa,WAAYV,GAC3BxB,EAAEkC,aAAa,OAAQH,GACvB/B,EAAEmC,QAGF1F,OAAOuF,IAAII,gBAAgBL,GAC3BhD,EAAKQ,SAAS,CAACf,SAAS,EAAOC,QAAS,UAGxCf,EAAgB+B,KAAK,aAAc,CAACC,OAAQ,iBAAkBC,KAAM7C,EAAI8C,aAI/EC,MAAM,SAAA1C,GAAG,OAAIO,EAAgB+B,KAAK,aAAc,CAACC,OAAQ,cAAeC,KAAM,4BAC9EH,KAAK,kBAAMT,EAAKQ,SAAS,CAACf,SAAS,EAAOC,QAAS,SA/DhE,CAAAG,IAAA,UAAAC,MAAA,WAmEQX,KAAKI,UAAUO,MAAQ,GAEvBX,KAAKqB,SAAS,CAACd,QAAS,SArEhC,CAAAG,IAAA,SAAAC,MAAA,WAwEY,IAAAiB,EAAA5B,KACJ,OACI6B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,SAAUjC,KAAKiC,SAASC,KAAKlC,OAC/B6B,EAAAC,EAAAC,cAAA,MAAII,UAAU,eAAd,gBACAN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,aACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACII,SAAU,SAAAC,GAAK,OAAIT,EAAKxB,UAAYiC,GACpCE,YAAY,2CACZD,KAAK,OACLE,UAAQ,KAGhBX,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,0BACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACII,SAAU,SAAAC,GAAK,OAAIT,EAAKuB,cAAgBd,GACxCE,YAAY,gDACZD,KAAK,UAGbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWG,UAAU,eACjBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQS,SAAUzC,KAAKK,MAAMC,SAA7B,UADJ,OAIIuB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQU,QAAS1C,KAAK2C,QAAQT,KAAKlC,MAAOyC,SAAUzC,KAAKK,MAAMC,QAASgC,KAAK,UAA7E,WAKRT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACVnC,KAAKK,MAAME,SAEhBsB,EAAAC,EAAAC,cAAA,8IA1GhBmB,EAAA,CAA8BN,IAAMC,WCKvBsB,EAAb,SAAAxE,GACI,SAAAwE,EAAYvE,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,IACdtE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqE,GAAAhE,KAAAH,KAAMJ,KAEDS,MAAQ,CACT+D,SAAS,EACTC,cAAc,EACdC,eAAgB,MAChBC,WAAW,EACXC,YAAa,KACbC,UAAW,MATD5E,EADtB,OAAAC,OAAAU,EAAA,EAAAV,CAAAqE,EAAAxE,GAAAG,OAAAW,EAAA,EAAAX,CAAAqE,EAAA,EAAAzD,IAAA,oBAAAC,MAAA,WAcuB,IAAAE,EAAAb,KACfR,EAAgBkF,GAAG,aAAc,SAAA9D,GAC7BC,EAAKQ,SAAS,CAACmD,YAAa5D,EAAIY,OAAQiD,UAAW7D,EAAIa,OACvDZ,EAAK8D,kBAjBjB,CAAAjE,IAAA,YAAAC,MAAA,WAsBQX,KAAKqB,SAAS,SAAAuD,GAAI,MAAK,CAACR,SAAUQ,EAAKR,aAtB/C,CAAA1D,IAAA,iBAAAC,MAAA,WA0BQX,KAAKqB,SAAS,SAAAuD,GAAI,MAAK,CAACP,cAAeO,EAAKP,kBA1BpD,CAAA3D,IAAA,cAAAC,MAAA,WA8BQX,KAAKqB,SAAS,SAAAuD,GAAI,MAAK,CAACL,WAAYK,EAAKL,eA9BjD,CAAA7D,IAAA,YAAAC,MAAA,WAkCQ,OACIkB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6C,GAAI,GACLhD,EAAAC,EAAAC,cAAC+C,EAAD,OAEJjD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6C,GAAI,GACLhD,EAAAC,EAAAC,cAACgD,EAAD,QAGRlD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6C,GAAI,GACLhD,EAAAC,EAAAC,cAACiD,EAAD,OAEJnD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6C,GAAI,GACLhD,EAAAC,EAAAC,cAACkD,EAAD,WAlDxB,CAAAvE,IAAA,eAAAC,MAAA,WA0DQ,MAAiC,QAA9BX,KAAKK,MAAMiE,eACHtE,KAAKkF,YAEsB,WAA9BlF,KAAKK,MAAMiE,eACRzC,EAAAC,EAAAC,cAAC+C,EAAD,MAE2B,QAA9B9E,KAAKK,MAAMiE,eACRzC,EAAAC,EAAAC,cAACgD,EAAD,MAE2B,UAA9B/E,KAAKK,MAAMiE,eACRzC,EAAAC,EAAAC,cAACiD,EAAD,MAE2B,YAA9BhF,KAAKK,MAAMiE,eACRzC,EAAAC,EAAAC,cAACkD,EAAD,MAEJ,OAzEf,CAAAvE,IAAA,SAAAC,MAAA,WA4EY,IAAAiB,EAAA5B,KACJ,OACI6B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQmD,MAAM,QAAQC,OAAO,KAAKC,OAAK,GACnCxD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeU,QAAS1C,KAAKsF,UAAUpD,KAAKlC,QAC5C6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUuD,OAAQvF,KAAKK,MAAM+D,QAASoB,QAAM,GACxC3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwD,QAAM,GACP3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUuD,OAAQvF,KAAKK,MAAMgE,aAAcoB,OAAQzF,KAAK0F,eAAexD,KAAKlC,OACxE6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgB2D,OAAK,GAArB,WAGA9D,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcU,QAAS,kBAAMd,EAAKP,SAAS,CAACiD,eAAgB,UAA5D,YACAzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcU,QAAS,kBAAMd,EAAKP,SAAS,CAACiD,eAAgB,aAA5D,gBACAzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcU,QAAS,kBAAMd,EAAKP,SAAS,CAACiD,eAAgB,UAA5D,gBACAzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcU,QAAS,kBAAMd,EAAKP,SAAS,CAACiD,eAAgB,YAA5D,iBACAzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcU,QAAS,kBAAMd,EAAKP,SAAS,CAACiD,eAAgB,cAA5D,iBAOxBzC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmD,MAAM,SACRtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACKhC,KAAK4F,kBAIlB/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuD,OAAQvF,KAAKK,MAAMkE,UAAWkB,OAAQzF,KAAK2E,YAAYzC,KAAKlC,OAC/D6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAayD,OAAQzF,KAAK2E,YAAYzC,KAAKlC,OACtCA,KAAKK,MAAMmE,aAAe,IAE/B3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACKhC,KAAKK,MAAMoE,iBAjHpCN,EAAA,CAAyBvB,IAAMC,WCL/BgD,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAAQnC,SAASoC,cAAc","file":"static/js/main.10bbc2f6.chunk.js","sourcesContent":["export const ajax = function(options){\r\n    if(!options || typeof options !== \"object\")\r\n        throw new Error(\"Ajax options missing.\");\r\n\r\n    return new Promise((resolve, reject) => {\r\n        let method = (typeof options.method === \"string\") ? options.method : \"GET\",\r\n            url = (typeof options.url === \"string\") ? options.url : window.location.origin,\r\n            headers = (typeof options.headers === \"object\" && options.headers) ? options.headers : {},\r\n            data = options.data;\r\n\r\n        let xhr = new XMLHttpRequest();\r\n\r\n        xhr.onload = () => resolve(xhr);\r\n        xhr.onerror = err => reject(err);\r\n\r\n        xhr.open(method, url, true);\r\n\r\n        for(let h in headers){\r\n            xhr.setRequestHeader(h, headers[h]);\r\n        }\r\n\r\n        if(data){\r\n            if(typeof data !== \"string\"){\r\n                let out = null;\r\n\r\n                try{\r\n                    out = JSON.stringify(data);\r\n                }\r\n                catch(err){\r\n                    reject(err);\r\n                }\r\n\r\n                xhr.send(out);\r\n            }\r\n            else xhr.send(data);\r\n        }\r\n        else xhr.send();\r\n    });\r\n};","import EventEmitter from \"events\";\r\n\r\nexport default new EventEmitter();","import React from \"react\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\nimport { ajax } from \"../ajax\";\r\nimport ModalDispatcher from \"../dispatchers/ModalDispatcher\";\r\n\r\nexport class ScrapeInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.urlsInput = null;\r\n\r\n        this.state = {\r\n            pending: false,\r\n            message: null\r\n        };\r\n    }\r\n\r\n    onSubmit(evt){\r\n        evt.preventDefault();\r\n\r\n        let urls = this.urlsInput.value.split(\",\");\r\n\r\n        let origin = window.location.origin.includes(\"localhost\") ? \"http://localhost:8080\" : window.location.origin;\r\n\r\n        let headers = {\r\n            \"Access-Control-Allow-Origin\": window.location.origin\r\n        };\r\n\r\n        let config = {\r\n            method:     \"POST\",\r\n            url:        `${origin}/api/page/scrape`,\r\n            data:       {urls},\r\n            headers\r\n        };\r\n\r\n        this.setState({pending: true, message: \"Requesting scrape...\"});\r\n\r\n        ajax(config)\r\n            .then(xhr => ModalDispatcher.emit(\"show-modal\", {header: \"Scrape Results\", body: xhr.response}))\r\n            .catch(err => ModalDispatcher.emit(\"show-modal\", {header: \"Scrape Results\", body: \"Server not available.\"}))\r\n            .then(() => this.setState({pending: false, message: \"\"}));\r\n    }\r\n\r\n    onClear(){\r\n        this.urlsInput.value = \"\";\r\n\r\n        this.setState({message: null});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.onSubmit.bind(this)}>\r\n                    <h3 className=\"text-center\">Scrape Pages</h3>\r\n                    <FormGroup>\r\n                        <Label>URLs</Label>\r\n                        <Input\r\n                            innerRef={input => this.urlsInput = input}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter URL(s) separated by commas here\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"text-center\">\r\n                        <Button disabled={this.state.pending}>Submit</Button>&nbsp;\r\n                        <Button onClick={this.onClear.bind(this)} disabled={this.state.pending} type=\"button\">\r\n                            Clear\r\n                        </Button>\r\n                    </FormGroup>\r\n                </Form>\r\n                <div className=\"text-center\">\r\n                    {this.state.message}\r\n                </div>\r\n                <div>\r\n                    URL(s) placed here will be scrapped and stored in the database for quick future use.\r\n                    This data is not associated with any model, but can be used in model creation later.\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\nimport { ajax } from \"../ajax\";\r\nimport ModalDispatcher from \"../dispatchers/ModalDispatcher\";\r\n\r\nexport class TrainInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.urlsInput = null;\r\n        this.topicInput = null;\r\n\r\n        this.state = {\r\n            message: null,\r\n            pending: false\r\n        };\r\n    }\r\n\r\n    onSubmit(evt){\r\n        evt.preventDefault();\r\n\r\n        let urls = this.urlsInput.value.split(\",\");\r\n        let topic = this.topicInput.value;\r\n\r\n        let origin = window.location.origin.includes(\"localhost\") ? \"http://localhost:8080\" : window.location.origin;\r\n\r\n        let headers = {\r\n            \"Access-Control-Allow-Origin\": window.location.origin,\r\n        };\r\n\r\n        let config = {\r\n            method:     \"POST\",\r\n            url:        `${origin}/api/train`,\r\n            data:       {urls, topic},\r\n            headers\r\n        };\r\n\r\n        ajax(config)\r\n            .then(xhr => ModalDispatcher.emit(\"show-modal\", {header: \"Training Results\", body: xhr.response}))\r\n            .catch(err => ModalDispatcher.emit(\"show-modal\", {header: \"Training Results\", body: \"Server not available.\"}))\r\n            .then(() => this.setState({pending: false, message: \"\"}));\r\n    }\r\n\r\n    onClear(){\r\n        this.urlsInput.value = \"\";\r\n        this.topicInput.value = \"\";\r\n\r\n        this.setState({message: null});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.onSubmit.bind(this)}>\r\n                    <h3 className=\"text-center\">Training Data</h3>\r\n                    <FormGroup>\r\n                        <Label>URLs</Label>\r\n                        <Input\r\n                            innerRef={input => this.urlsInput = input}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter training URL(s) here, comma separated\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Topic</Label>\r\n                        <Input\r\n                            innerRef={input => this.topicInput = input}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter training topic\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"text-center\">\r\n                        <Button disabled={this.state.pending}>Submit</Button>&nbsp;\r\n                        <Button onClick={this.onClear.bind(this)} disabled={this.state.pending} type=\"button\">\r\n                            Clear\r\n                        </Button>\r\n                    </FormGroup>\r\n                </Form>\r\n                <div className=\"text-center\">\r\n                    {this.state.message}\r\n                </div>\r\n                <div>\r\n                    URL(s) placed here will be loaded and used to create a training model.\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\nimport { ajax } from \"../ajax\";\r\nimport ModalDispatcher from \"../dispatchers/ModalDispatcher\";\r\n\r\nexport class PredictInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.urlsInput = null;\r\n        this.topicInput = null;\r\n\r\n        this.state = {\r\n            message: null,\r\n            pending: false\r\n        };\r\n    }\r\n\r\n    onSubmit(evt){\r\n        evt.preventDefault();\r\n\r\n        let urls = this.urlsInput.value.split(\",\");\r\n        let topic = this.topicInput.value;\r\n\r\n        let origin = window.location.origin.includes(\"localhost\") ? \"http://localhost:8080\" : window.location.origin;\r\n\r\n        let headers = {\r\n            \"Access-Control-Allow-Origin\": window.location.origin\r\n        };\r\n\r\n        let config = {\r\n            method:     \"POST\",\r\n            url:        `${origin}/api/predict`,\r\n            data:       {urls, topic},\r\n            headers\r\n        };\r\n\r\n        ajax(config)\r\n            .then(xhr => ModalDispatcher.emit(\"show-modal\", {header: \"Prediction Results\", body: xhr.response}))\r\n            .catch(err => ModalDispatcher.emit(\"show-modal\", {header: \"Prediction Results\", body: \"Server not available.\"}))\r\n            .then(() => this.setState({pending: false, message: \"\"}));\r\n    }\r\n\r\n    onClear(){\r\n        this.urlsInput.value = \"\";\r\n        this.topicInput.value = \"\";\r\n\r\n        this.setState({message: null});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.onSubmit.bind(this)}>\r\n                    <h3 className=\"text-center\">Model Prediction</h3>\r\n                    <FormGroup>\r\n                        <Label>URLs</Label>\r\n                        <Input\r\n                            innerRef={input => this.urlsInput = input}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter URL(s) to test, comma separated\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Topic</Label>\r\n                        <Input\r\n                            innerRef={input => this.topicInput = input}\r\n                            type=\"text\"\r\n                            placeholder=\"Enter topic to test\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"text-center\">\r\n                        <Button disabled={this.state.pending}>Submit</Button>&nbsp;\r\n                        <Button onClick={this.onClear.bind(this)} disabled={this.state.pending} type=\"button\">\r\n                            Clear\r\n                        </Button>\r\n                    </FormGroup>\r\n                </Form>\r\n                <div className=\"text-center\">\r\n                    {this.state.message}\r\n                </div>\r\n                <div>\r\n                    URL(s) placed here will be loaded and checked against the trained model.\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\nimport { ajax } from \"../ajax\";\r\nimport ModalDispatcher from \"../dispatchers/ModalDispatcher\";\r\n\r\nexport class CSVInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.urlsInput = null;\r\n        this.filenameInput = null;\r\n\r\n        this.state = {\r\n            message: null,\r\n            pending: false\r\n        };\r\n    }\r\n\r\n    onSubmit(evt){\r\n        evt.preventDefault();\r\n\r\n        let urls = encodeURIComponent(this.urlsInput.value);\r\n\r\n        let origin = window.location.origin.includes(\"localhost\") ? \"http://localhost:8080\" : window.location.origin;\r\n\r\n        let headers = {\r\n            \"Access-Control-Allow-Origin\": window.location.origin\r\n        };\r\n\r\n        let config = {\r\n            method:     \"GET\",\r\n            url:        `${origin}/api/page/csv?urls=${urls}`,\r\n            headers\r\n        };\r\n\r\n        this.setState({pending: true, message: \"Requesting CSV file...\"});\r\n\r\n        ajax(config)\r\n            .then(xhr => {\r\n                if(xhr.status === 200){\r\n                    // get optional filename or use default \r\n                    let filename = this.filenameInput.value ? this.filenameInput.value : `words_${Date.now()}.csv`;\r\n\r\n                    // append .csv if needed\r\n                    if(!filename.endsWith(\".csv\")){\r\n                        filename += \".csv\";\r\n                    }\r\n\r\n                    // create a secret link tag\r\n                    let csvBlob = new Blob([xhr.response], {type: \"octet/stream\"});\r\n                    let a = document.createElement(\"a\");\r\n                    let objUrl = window.URL.createObjectURL(csvBlob);\r\n\r\n                    // setup tag and download\r\n                    a.setAttribute(\"download\", filename);\r\n                    a.setAttribute(\"href\", objUrl);\r\n                    a.click();\r\n\r\n                    // delete data url & free buttons\r\n                    window.URL.revokeObjectURL(objUrl);\r\n                    this.setState({pending: false, message: \"\"});\r\n                }\r\n                else{\r\n                    ModalDispatcher.emit(\"show-modal\", {header: \"Scrape Results\", body: xhr.response});\r\n                }\r\n                \r\n            })\r\n            .catch(err => ModalDispatcher.emit(\"show-modal\", {header: \"CSV Results\", body: \"Server not available.\"}))\r\n            .then(() => this.setState({pending: false, message: \"\"}));\r\n    }\r\n\r\n    onClear(){\r\n        this.urlsInput.value = \"\";\r\n        \r\n        this.setState({message: null});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.onSubmit.bind(this)}>\r\n                    <h3 className=\"text-center\">Download CSV</h3>\r\n                    <FormGroup>\r\n                        <Label>URLs</Label>\r\n                        <Input\r\n                            innerRef={input => this.urlsInput = input}\r\n                            placeholder=\"Enter URL(s) for their combined CSV data\"\r\n                            type=\"text\"\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Optional Filename</Label>\r\n                        <Input\r\n                            innerRef={input => this.filenameInput = input}\r\n                            placeholder=\"Enter optional filename (.csv not neccessary)\"\r\n                            type=\"text\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"text-center\">\r\n                        <Button disabled={this.state.pending}>\r\n                            Submit\r\n                        </Button>&nbsp;\r\n                        <Button onClick={this.onClear.bind(this)} disabled={this.state.pending} type=\"button\">\r\n                            Clear\r\n                        </Button>\r\n                    </FormGroup>\r\n                </Form>\r\n                <div className=\"text-center\">\r\n                    {this.state.message}\r\n                </div>\r\n                <div>\r\n                    URL(s) placed here will be searched for in the database.\r\n                    A CSV file will be downloaded with all the data about the URL(s).\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import \"../lib/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { Container, Card, CardBody, Row, Col, Modal, ModalBody, ModalHeader, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, Navbar, NavbarToggler, Nav, Collapse, NavItem } from \"reactstrap\";\r\nimport { ScrapeInput } from \"./ScrapeInput\";\r\nimport { TrainInput } from \"./TrainInput\";\r\nimport { PredictInput } from \"./PredictInput\";\r\nimport { CSVInput } from \"./CSVInput\";\r\nimport ModalDispatcher from \"../dispatchers/ModalDispatcher\";\r\n\r\nexport class App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            showNav: false,\r\n            showDropdown: false,\r\n            dropdownOption: \"all\",\r\n            showModal: false,\r\n            modalHeader: null,\r\n            modalBody: null\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        ModalDispatcher.on(\"show-modal\", evt => {\r\n            this.setState({modalHeader: evt.header, modalBody: evt.body});\r\n            this.toggleModal();\r\n        });\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState(prev => ({showNav: !prev.showNav}));\r\n    }\r\n\r\n    toggleDropdown(){\r\n        this.setState(prev => ({showDropdown: !prev.showDropdown}));\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState(prev => ({showModal: !prev.showModal}));\r\n    }\r\n\r\n    renderAll(){\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <ScrapeInput/>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <CSVInput/>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <TrainInput/>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <PredictInput/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderInputs(){\r\n        if(this.state.dropdownOption === \"all\"){\r\n            return this.renderAll();\r\n        }\r\n        else if(this.state.dropdownOption === \"scrape\"){\r\n            return <ScrapeInput/>\r\n        }\r\n        else if(this.state.dropdownOption === \"csv\"){\r\n            return <CSVInput/>\r\n        }\r\n        else if(this.state.dropdownOption === \"train\"){\r\n            return <TrainInput/>\r\n        }\r\n        else if(this.state.dropdownOption === \"predict\"){\r\n            return <PredictInput/>\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar color=\"light\" expand=\"lg\" light>\r\n                    <NavbarToggler onClick={this.toggleNav.bind(this)}/>\r\n                    <Collapse isOpen={this.state.showNav} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <Dropdown isOpen={this.state.showDropdown} toggle={this.toggleDropdown.bind(this)}>\r\n                                    <DropdownToggle caret>\r\n                                        Display\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                        <DropdownItem onClick={() => this.setState({dropdownOption: \"all\"})}>Show All</DropdownItem>\r\n                                        <DropdownItem onClick={() => this.setState({dropdownOption: \"scrape\"})}>Scrape Pages</DropdownItem>\r\n                                        <DropdownItem onClick={() => this.setState({dropdownOption: \"csv\"})}>Download CSV</DropdownItem>\r\n                                        <DropdownItem onClick={() => this.setState({dropdownOption: \"train\"})}>Training Data</DropdownItem>\r\n                                        <DropdownItem onClick={() => this.setState({dropdownOption: \"predict\"})}>Predict</DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </Dropdown>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n                <br/>\r\n                <Container>\r\n                    <Card color=\"light\">\r\n                        <CardBody>\r\n                            {this.renderInputs()}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n                <Modal isOpen={this.state.showModal} toggle={this.toggleModal.bind(this)}>\r\n                    <ModalHeader toggle={this.toggleModal.bind(this)}>\r\n                        {this.state.modalHeader || \"\"}\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        {this.state.modalBody}\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { EventEmitter } from \"events\";\r\nimport { App } from \"./components/App\";\r\n\r\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}